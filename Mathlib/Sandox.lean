/-
Copyright (c) 2024 Xavier Roblot. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Xavier Roblot
-/
import Mathlib.NumberTheory.LSeries.Basic

/-!
# Docstring

-/

noncomputable section

open Filter Topology Finset Asymptotics Metric

variable (a : ‚Ñï ‚Üí ‚Ñù) {l : ‚Ñù}
  (hF : Tendsto (fun n ‚Ü¶ (‚àë k in range (n + 1), a k) / n) atTop (ùìù 1)) (hl : 0 < l)

theorem main (f : ‚Ñï ‚Üí ‚Ñù ‚Üí ‚Ñù) (h : ‚àÄ·∂† s in (ùìù[>] 1), (fun n ‚Ü¶ f n s) ~[atTop] fun n ‚Ü¶ 1 / n ^ s) :
    Tendsto (fun s : ‚Ñù ‚Ü¶ (s - 1) * ‚àë' n, f n s) (ùìù[>] 1) (ùìù 1) := by
  have : ‚àÄ Œµ > 0, ‚àÄ·∂† n : ‚Ñï in atTop, ‚àÄ s : ‚Ñù,
    (1 - Œµ) / (n : ‚Ñù) ^ s ‚â§ f n s ‚àß f n s ‚â§ (1 + Œµ) / (n : ‚Ñù) ^ s := sorry
  rw [tendsto_nhdsWithin_nhds]
  intro Œµ hŒµ
  sorry

theorem apply :
    Tendsto (fun s : ‚Ñù ‚Ü¶ (s - 1) * ‚àë' n, a n / n ^ s) (ùìù[>] 1) (ùìù 1) := by
  let S : ‚Ñï ‚Üí ‚Ñù := fun n ‚Ü¶ ‚àë k in range (n + 1), a k
  have h‚ÇÄ : (fun n ‚Ü¶ S n) ~[atTop] fun n ‚Ü¶ n := sorry
  have h‚ÇÅ : ‚àÄ n, 1 ‚â§ n ‚Üí a n = S n - S (n - 1) := sorry
  have h‚ÇÇ : (fun s : ‚Ñù ‚Ü¶ ‚àë' n, a n / n ^ s)  =·∂†[ùìù[>] 1]
    fun s ‚Ü¶ ‚àë' n, S n / n ^ s - ‚àë' n, S (n - 1) / n ^ s := by
    sorry
  have h‚ÇÉ : (fun s : ‚Ñù ‚Ü¶ ‚àë' n, S (n - 1) / n ^ s) =·∂†[ùìù[>] 1] fun s ‚Ü¶ ‚àë' n, S n / (n + 1) ^ s := by
    sorry
  have h‚ÇÑ : (fun s : ‚Ñù ‚Ü¶ ‚àë' n, a n / n ^ s) =·∂†[ùìù[>] 1]
      fun s ‚Ü¶ ‚àë' n, (S n) * (1 / n ^ s - 1 /(n + 1) ^ s) := by
    sorry
  have h‚ÇÖ : (fun s : ‚Ñù ‚Ü¶ (s - 1) * ‚àë' n, a n / n ^ s) =·∂†[ùìù[>] 1]
      fun s ‚Ü¶ (s - 1) * ‚àë' n, (S n) * (1 / n ^ s - 1 /(n + 1) ^ s) := by
    sorry
  refine Tendsto.congr' h‚ÇÖ.symm ?_
  refine main _ ?_
  filter_upwards [eventually_mem_nhdsWithin] with s hs
  


end
